Fac {
	.construct Fac().V {
		invokespecial(this, "<init>").V;
	}

	.method public compFac(num.i32).i32 {
		if ($1.num.i32 <.i32 1.i32) goto ifBlock1;
		aux2.i32 :=.i32 $1.num.i32 -.i32 1.i32;
		aux1.i32 :=.i32 invokevirtual(this, "compFac", aux2.i32).i32;
		num_aux.i32 :=.i32 $1.num.i32 *.i32 aux1.i32;


goto endif1;
ifBlock1:
		num_aux.i32 :=.i32 1.i32;

endif1:

		ret.i32 num_aux.i32;
	}

	.method public static main(args.array.String).V {
		aux4.Fac :=.Fac new(Fac).Fac;
invokespecial(aux4.Fac, "<init>").V;
		aux3.i32 :=.i32 invokevirtual(aux4.Fac, "compFac", 10.i32).i32;
		invokestatic(io, "println", aux3.i32).V;
		ret.V;
	}

}